System_type(0=star,1=binary,2=agn,3=previous)                    0

### Parameters for the Central Object
Central_object.mass(msol)                       0.8
Central_object.radius(cm)                     7e+08
Central_object.radiation(y=1)                     1
Central_object.rad_type_to_make_wind(0=bb,1=models)                    0
Central_object.temp                          40000

### Parameters for the Disk (if there is one)
Disk.type(0=no.disk,1=standard.flat.disk,2=vertically.extended.disk)                    1
Disk.radiation(y=1)                               1
Disk.rad_type_to_make_wind(0=bb,1=models)                    0
Disk.temperature.profile(0=Shakura-Sunyaev;1=readin,2=yso)                    0
Disk.mdot(msol/yr)                            1e-08
Disk.radmax(cm)                             2.4e+10

### Parameters for BL or AGN
Boundary_layer.radiation(y=1)                     0

### Parameters descibing the various winds or coronae in the system
Wind_radiation(y=1)                              1
Wind.number_of_components                        2
Wind_type(0=SV,1=Star,3=Hydro,4=corona,5=knigge,6=homologous,7=yso,9=shell,10=imported)                   1
Wind.coord_system(0=spherical,1=cylindrical,2=spherical_polar,3=cyl_var)                    1
Wind.dim.in.x_or_r.direction                     30
Wind.dim.in.z_or_theta.direction                   30
Wind_type(0=SV,1=Star,3=Hydro,4=corona,5=knigge,6=homologous,7=yso,9=shell,10=imported)                   0
Wind.coord_system(0=spherical,1=cylindrical,2=spherical_polar,3=cyl_var)                    1
Wind.dim.in.x_or_r.direction                     30
Wind.dim.in.z_or_theta.direction                  30

### Parameters associated with photon number, cycles,ionization and radiative transfer options
Photons_per_cycle                            100000
Ionization_cycles                                2
Spectrum_cycles                                  2
Wind_ionization(0=on.the.spot,1=LTE(tr),2=fixed,3=recalc_bb,4=LTE(t_e),8=matrix_bb,9=matrix_pow)                    3
Line_transfer(0=pure.abs,1=pure.scat,2=sing.scat,3=escape.prob,4=anisotryopic,5=thermal_trapping,6=macro_atoms,7=macro_atoms+aniso.scattering)                   5
Atomic_data                         data/standard78
Surface.reflection.or.absorption(0=no.rerad,1=high.albedo,2=thermalized.rerad)                    0
Thermal_balance_options(0=everything.on,1=no.adiabatic)                    0

### Parameters for Domain 0
Stellar_wind.mdot(msol/yr)                    1e-8
Stellar_wind.radmin(cm)                       7e+08
Stellar_wind.radmax(cm)                       1e12
Stellar_wind.vbase(cm)                        2e+07
Stellar_wind.v_infinity(cm)                   3e+08
Stellar_wind.acceleration_exponent                    1
Wind.t.init                                   40000
Wind.filling_factor(1=smooth,<1=clumped)                    1

### Parameters for Domain 1
wind.mdot(msol/yr)                            1e-09
SV.diskmin(units_of_rstar)                        4
SV.diskmax(units_of_rstar)                       12
SV.thetamin(deg)                                 20
SV.thetamax(deg)                                 65
SV.mdot_r_exponent                                0
SV.v_infinity(in_units_of_vescape                    3
SV.acceleration_length(cm)                    7e+10
SV.acceleration_exponent                        1.5
Wind.radmax(cm)                               1e+12
Wind.t.init                                   30000
Wind.filling_factor(1=smooth,<1=clumped)                    1

### Parameters defining the spectra seen by observers

Central_object.rad_type_in_final_spectrum(0=bb,1=models,2=uniform)                    0
Disk.rad_type_in_final_spectrum(0=bb,1=models,2=uniform)                    0

### The minimum and maximum wavelengths in the final spectra
Spectrum.wavemin(Angstroms)                     850
Spectrum.wavemax(Angstroms)                    1850

### The observers and their location relative to the system
Spectrum.no_observers                             4
Spectrum.angle(0=pole)                           10
Spectrum.angle(0=pole)                           30
Spectrum.angle(0=pole)                           60
Spectrum.angle(0=pole)                           80
Spectrum.live_or_die(0=live.or.die,extract=anything_else)                    1
Spectrum.type(flambda(1),fnu(2),basic(other)                    1

### Parameters for Reverberation Modeling (if needed)
Reverb.type(0=off,1=photon,2=wind,3=matom)                    0

### Other parameters
Photon_sampling.approach(0=T,1=(f1,f2),2=cv,3=yso,4=user_defined,5=cloudy_test,6=wide,7=AGN,8=logarithmic)                    2
